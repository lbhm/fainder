[build-system]
requires = ["setuptools >= 61"]
build-backend = "setuptools.build_meta"

[project]
name = "fainder"
dynamic = ["version", "readme"]
description = "A fast and accurate index for distribution-aware dataset search."
requires-python = ">=3.10, <3.13"
license = {file = "LICENSE"}
authors = [
    {name = "Lennart Behme", email = "lennart.behme@tu-berlin.de"},
]
keywords = ["data discovery", "dataset search", "distribution-aware", "percentile predicate"]
classifiers = [
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "loguru~=0.7.2",
    "numpy~=1.26",
    "pandas[parquet,performance]~=2.1",
    "requests~=2.31",
    "scikit-learn~=1.3",
    "scipy~=1.11",
    "umap-learn[tbb]~=0.5.5",
    "zstandard~=0.22.0",
]

[project.optional-dependencies]
analysis = [
    "ipykernel~=6.29",
    "ipywidgets~=8.1",
    "matplotlib~=3.8",
    "nbformat~=5.9",
    "seaborn~=0.13",
]
dev = [
    "fainder[analysis]",
    "pre-commit~=3.5",
]

[project.scripts]
check-index-correctness = "fainder.validation.index_correctness:main"
check-index-equality = "fainder.validation.index_equality:main"
cluster-histograms = "fainder.preprocessing.clustering:main"
compute-binsort = "fainder.preprocessing.binsort:main"
compute-distributions = "fainder.data.distributions:main"
compute-histograms = "fainder.data.histograms:main"
compute-accuracy-metrics = "fainder.validation.result_accuracy:main"
compute-query-metrics = "fainder.validation.query_metrics:main"
convert-to-parquet = "fainder.data.parquet_conversion:main"
create-index = "fainder.preprocessing.percentile_index:main"
download-datasets = "fainder.data.downloader:main"
filter-histograms = "fainder.preprocessing.filtering:main"
generate-queries = "fainder.queries.generator:main"
run-exact-query = "fainder.execution.runner_exact:main"
run-queries = "fainder.execution.runner:main"
run-query = "fainder.execution.runner_single:main"

[project.urls]
Repository = "https://github.com/lbhm/fainder"

[tool.setuptools]
packages = ["fainder"]

[tool.setuptools.dynamic]
version = {attr = "fainder.__version__"}
readme = {file = ["README.md"], content-type = "text/markdown"}

[tool.black]
line-length = 99
preview = true
target-version = ["py310", "py311", "py312"]

[tool.flake8]
max-line-length = 90  # includes 10% buffer so the upper limit actually is 99
select = ["B", "C", "D", "E", "F", "W", "B9", "C4"]
ignore = ["D1", "E203", "E501", "F821", "W503"]
docstring-convention = "google"

[tool.isort]
float_to_top = true
line_length = 99
profile = "black"
skip_gitignore = true
src_paths = ["fainder"]

[tool.mypy]
ignore_missing_imports = true
plugins = ["numpy.typing.mypy_plugin"]
strict = true
warn_unused_ignores = false
